{
    "openapi": "3.0.0",
    "info": {
        "title": "JCreations API",
        "description": "API Documentation for JCreations Application",
        "contact": {
            "email": "support@jcreations.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/admin/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticates user credentials and returns a token",
                "operationId": "52072ab0ab3a6409abf44ae228659d79",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Admin User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "admin@example.com"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "admin"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|laravel_sanctum_token..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided credentials are incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred during login"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Invalidates the user's current access token",
                "operationId": "88b3d40bc97cfe058d67a9c1c9e541e2",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/verify": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Returns the currently authenticated user's information",
                "operationId": "236852103046fc75351cccbf39a6c4a2",
                "responses": {
                    "200": {
                        "description": "Authenticated user information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Admin User"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "admin@example.com"
                                        },
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "admin"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart contents",
                "description": "Returns the current cart with all items. Requires cart_id for guest users.",
                "operationId": "0652f94dde92e36bbb3c461356ce1d7b",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_id": {
                                        "description": "Required for guest users to identify their cart",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart contents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "firebase_uid": {
                                            "type": "string",
                                            "example": "user123",
                                            "nullable": true
                                        },
                                        "total": {
                                            "type": "number",
                                            "example": 129.95
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CartItem"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear cart",
                "description": "Removes all items from the cart. Requires cart_id for guest users.",
                "operationId": "c11937b9c6a767730b1dc083d3d13e96",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_id": {
                                        "description": "Required for guest users to identify their cart",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart cleared successfully"
                                        },
                                        "cart_id": {
                                            "description": "Store this ID for future cart operations",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cart/{id}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart by ID",
                "description": "Returns a specific cart by ID",
                "operationId": "557c72a5686912dee2512190ceb381c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart contents",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart not found"
                    }
                }
            }
        },
        "/api/cart/items": {
            "post": {
                "tags": [
                    "Cart Items"
                ],
                "summary": "Add item to cart",
                "description": "Adds a product to the shopping cart. Requires cart_id for guest users.",
                "operationId": "584c30d7a890fd66597947dba9d9fbd1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "cart_id": {
                                        "description": "Required for guest users to identify their cart",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item added to cart",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item added to cart"
                                        },
                                        "item": {
                                            "$ref": "#/components/schemas/CartItemWithProduct"
                                        },
                                        "cart_id": {
                                            "description": "Store this ID for future cart operations",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/cart/items/{id}": {
            "put": {
                "tags": [
                    "Cart Items"
                ],
                "summary": "Update cart item",
                "description": "Updates the quantity of an item in the cart. Requires cart_id for guest users.",
                "operationId": "103627d0762186830290d892b3e990d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "cart_id": {
                                        "description": "Required for guest users to identify their cart",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart item updated"
                                        },
                                        "item": {
                                            "$ref": "#/components/schemas/CartItem"
                                        },
                                        "cart_id": {
                                            "description": "Store this ID for future cart operations",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cart Items"
                ],
                "summary": "Remove item from cart",
                "description": "Removes an item from the shopping cart. Requires cart_id for guest users.",
                "operationId": "3a2a1dade9e81ef8d4f58b6bc8384549",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_id": {
                                        "description": "Required for guest users to identify their cart",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item removed from cart"
                                        },
                                        "cart_id": {
                                            "description": "Store this ID for future cart operations",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart item not found"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Returns a list of all categories (public endpoint)",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Electronics"
                                            },
                                            "img": {
                                                "type": "string",
                                                "example": "categories/electronics.jpg"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/categories": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category with name and image",
                "operationId": "ac7cc88e7117004bc914f1d2169c5444",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "img"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "img": {
                                        "description": "Category image",
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Electronics"
                                        },
                                        "img": {
                                            "type": "string",
                                            "example": "categories/electronics.jpg"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "description": "Returns the details of a specific category (public endpoint)",
                "operationId": "e92579e78391b6199e78c2a091dbea0a",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Electronics"
                                        },
                                        "img": {
                                            "type": "string",
                                            "example": "categories/electronics.jpg"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/admin/categories/{category}": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Updates an existing category",
                "operationId": "e79fd90b1a978c99a6faae0e32823ee1",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Electronics"
                                    },
                                    "img": {
                                        "description": "Category image",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "default": "PUT",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated Electronics"
                                        },
                                        "img": {
                                            "type": "string",
                                            "example": "categories/updated-electronics.jpg"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "description": "Deletes a category",
                "operationId": "cf8a40aa1eedd264f221ce73614da9c3",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/cod": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new cash on delivery order",
                "description": "Creates a new order with payment type set to cash on delivery",
                "operationId": "createCodOrder",
                "requestBody": {
                    "description": "Order creation details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cart_id",
                                    "customer_name",
                                    "contact_number",
                                    "city",
                                    "address"
                                ],
                                "properties": {
                                    "cart_id": {
                                        "description": "ID of the cart containing items to order",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "customer_name": {
                                        "description": "Full name of the customer",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "description": "Contact phone number for delivery",
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "city": {
                                        "description": "City for delivery (must exist in delivery_locations table)",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "address": {
                                        "description": "Detailed delivery address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "firebase_uid": {
                                        "description": "Firebase user ID for authenticated users",
                                        "type": "string",
                                        "example": "abc123xyz",
                                        "nullable": true
                                    },
                                    "req_datetime": {
                                        "description": "Requested delivery date and time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-30T14:00:00Z",
                                        "nullable": true
                                    },
                                    "shipping_charge": {
                                        "description": "Custom shipping charge (if not using location-based charge)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cash on delivery order created successfully"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        },
                                        "total_amount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 150.75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "cart_id": [
                                                    "The cart id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart not found or empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cart not found or empty"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/online": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new online order with card payment",
                "description": "Creates a new order with payment type set to card payment and returns payment gateway information",
                "operationId": "createOnlineOrder",
                "requestBody": {
                    "description": "Order creation details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cart_id",
                                    "customer_name",
                                    "contact_number",
                                    "city",
                                    "address"
                                ],
                                "properties": {
                                    "cart_id": {
                                        "description": "ID of the cart containing items to order",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "customer_name": {
                                        "description": "Full name of the customer",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "contact_number": {
                                        "description": "Contact phone number for delivery",
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "city": {
                                        "description": "City for delivery (must exist in delivery_locations table)",
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "address": {
                                        "description": "Detailed delivery address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "firebase_uid": {
                                        "description": "Firebase user ID for authenticated users",
                                        "type": "string",
                                        "example": "abc123xyz",
                                        "nullable": true
                                    },
                                    "req_datetime": {
                                        "description": "Requested delivery date and time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-04-30T14:00:00Z",
                                        "nullable": true
                                    },
                                    "shipping_charge": {
                                        "description": "Custom shipping charge (if not using location-based charge)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Online order created successfully"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        },
                                        "payment_status": {
                                            "type": "string",
                                            "example": "pending"
                                        },
                                        "total_amount": {
                                            "type": "string",
                                            "example": "150.75"
                                        },
                                        "shipping_charge": {
                                            "type": "string",
                                            "example": "10.00"
                                        },
                                        "total_with_shipping": {
                                            "type": "string",
                                            "example": "160.75"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product_name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "unit_price": {
                                                        "type": "string",
                                                        "example": "75.38"
                                                    },
                                                    "subtotal": {
                                                        "type": "string",
                                                        "example": "150.75"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "payment_data": {
                                            "properties": {
                                                "merchant_id": {
                                                    "type": "string",
                                                    "example": "1221046"
                                                },
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "amount": {
                                                    "type": "string",
                                                    "example": "160.75"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "example": "LKR"
                                                },
                                                "hash": {
                                                    "type": "string",
                                                    "example": "A1B2C3D4E5F6..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "cart_id": [
                                                    "The cart id field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart not found or empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cart not found or empty"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "description": "Retrieves detailed information about a specific order including all order items",
                "operationId": "getOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "customer_name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "contact_number": {
                                            "type": "string",
                                            "example": "1234567890"
                                        },
                                        "delivery_location_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "firebase_uid": {
                                            "type": "string",
                                            "example": "abc123xyz",
                                            "nullable": true
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        },
                                        "payment_type": {
                                            "type": "string",
                                            "example": "cash_on_delivery"
                                        },
                                        "payment_status": {
                                            "type": "string",
                                            "example": "pending",
                                            "nullable": true
                                        },
                                        "total_amount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 150.75
                                        },
                                        "shipping_charge": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 10
                                        },
                                        "order_datetime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-27T10:30:00Z"
                                        },
                                        "req_datetime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-04-30T14:00:00Z",
                                            "nullable": true
                                        },
                                        "orderItems": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 456
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "product_name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "unit_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 75.38
                                                    },
                                                    "total_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 150.75
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{id}/status": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "description": "Updates the processing status of an existing order",
                "operationId": "updateOrderStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "requestBody": {
                    "description": "New order status",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "The new status for the order",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "shipped",
                                            "delivered",
                                            "cancelled"
                                        ],
                                        "example": "processing"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order status updated successfully"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "processing"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "status": [
                                                    "The status field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{id}/payment-status": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update order payment status",
                "description": "Updates the payment status of an existing order",
                "operationId": "updatePaymentStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "requestBody": {
                    "description": "New payment status",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_status"
                                ],
                                "properties": {
                                    "payment_status": {
                                        "description": "The new payment status for the order",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "success",
                                            "failed"
                                        ],
                                        "example": "success"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order payment status updated successfully"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "payment_status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "payment_status": [
                                                    "The payment status field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/{firebase_uid}/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders for a specific user",
                "description": "Retrieves a paginated list of all orders associated with a specific Firebase user ID",
                "operationId": "getUserOrders",
                "parameters": [
                    {
                        "name": "firebase_uid",
                        "in": "path",
                        "description": "Firebase user ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abc123xyz"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter orders by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "shipped",
                                "delivered",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of records per page (default 15)",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "customer_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "contact_number": {
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    },
                                                    "delivery_location_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main St"
                                                    },
                                                    "firebase_uid": {
                                                        "type": "string",
                                                        "example": "abc123xyz",
                                                        "nullable": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "payment_type": {
                                                        "type": "string",
                                                        "example": "cash_on_delivery"
                                                    },
                                                    "payment_status": {
                                                        "type": "string",
                                                        "example": "pending",
                                                        "nullable": true
                                                    },
                                                    "total_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 150.75
                                                    },
                                                    "shipping_charge": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 10
                                                    },
                                                    "order_datetime": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-27T10:30:00Z"
                                                    },
                                                    "req_datetime": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-30T14:00:00Z",
                                                        "nullable": true
                                                    },
                                                    "orderItems": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 456
                                                                },
                                                                "product_name": {
                                                                    "type": "string",
                                                                    "example": "Product Name"
                                                                },
                                                                "quantity": {
                                                                    "type": "integer",
                                                                    "example": 2
                                                                },
                                                                "unit_price": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 75.38
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://example.com/api/user/abc123xyz/orders?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://example.com/api/user/abc123xyz/orders?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://example.com/api/user/abc123xyz/orders?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://example.com/api/user/abc123xyz/orders"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 25
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders with optional filtering",
                "description": "Retrieves a list of all orders with optional filters for status, payment type, and user",
                "operationId": "getAllOrders",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter orders by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "shipped",
                                "delivered",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "payment_type",
                        "in": "query",
                        "description": "Filter orders by payment type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cash_on_delivery",
                                "card_payment"
                            ]
                        }
                    },
                    {
                        "name": "firebase_uid",
                        "in": "query",
                        "description": "Filter orders by user's Firebase ID",
                        "schema": {
                            "type": "string",
                            "example": "abc123xyz"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return (default: all records)",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "customer_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "contact_number": {
                                                "type": "string",
                                                "example": "1234567890"
                                            },
                                            "delivery_location_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Main St"
                                            },
                                            "firebase_uid": {
                                                "type": "string",
                                                "example": "abc123xyz",
                                                "nullable": true
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "processing",
                                                    "shipped",
                                                    "delivered",
                                                    "cancelled"
                                                ],
                                                "example": "pending"
                                            },
                                            "payment_type": {
                                                "type": "string",
                                                "enum": [
                                                    "cash_on_delivery",
                                                    "card_payment"
                                                ],
                                                "example": "cash_on_delivery"
                                            },
                                            "payment_status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "success",
                                                    "failed"
                                                ],
                                                "example": "pending",
                                                "nullable": true
                                            },
                                            "total_amount": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 150.75
                                            },
                                            "shipping_charge": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "order_datetime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-04-27T10:30:00Z"
                                            },
                                            "req_datetime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-04-30T14:00:00Z",
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-04-27T10:30:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-04-27T10:30:00Z"
                                            },
                                            "orderItems": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 456
                                                        },
                                                        "order_id": {
                                                            "type": "integer",
                                                            "example": 123
                                                        },
                                                        "product_name": {
                                                            "type": "string",
                                                            "example": "Product Name"
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "unit_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 75.38
                                                        },
                                                        "total_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 150.75
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/search": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Search orders by various criteria",
                "description": "Performs a search across orders with filtering options for text search, status, payment type, and date range",
                "operationId": "searchOrders",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query (searches in customer name, order ID, contact number, and address)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "john"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter orders by status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "shipped",
                                "delivered",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "payment_type",
                        "in": "query",
                        "description": "Filter orders by payment type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cash_on_delivery",
                                "card_payment"
                            ]
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Filter orders from this date (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-04-01"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Filter orders until this date (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-04-27"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records per page (default 20)",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "customer_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "contact_number": {
                                                "type": "string",
                                                "example": "1234567890"
                                            },
                                            "delivery_location_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Main St"
                                            },
                                            "firebase_uid": {
                                                "type": "string",
                                                "example": "abc123xyz",
                                                "nullable": true
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "processing",
                                                    "shipped",
                                                    "delivered",
                                                    "cancelled"
                                                ],
                                                "example": "pending"
                                            },
                                            "payment_type": {
                                                "type": "string",
                                                "enum": [
                                                    "cash_on_delivery",
                                                    "card_payment"
                                                ],
                                                "example": "cash_on_delivery"
                                            },
                                            "payment_status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "success",
                                                    "failed"
                                                ],
                                                "example": "pending",
                                                "nullable": true
                                            },
                                            "total_amount": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 150.75
                                            },
                                            "shipping_charge": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 10
                                            },
                                            "order_datetime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-04-27T10:30:00Z"
                                            },
                                            "req_datetime": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-04-30T14:00:00Z",
                                                "nullable": true
                                            },
                                            "orderItems": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 456
                                                        },
                                                        "order_id": {
                                                            "type": "integer",
                                                            "example": 123
                                                        },
                                                        "product_name": {
                                                            "type": "string",
                                                            "example": "Product Name"
                                                        },
                                                        "quantity": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "unit_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 75.38
                                                        },
                                                        "total_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 150.75
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "query": [
                                                    "The query field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{id}/cancel": {
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel an order",
                "description": "Cancels an existing order if it's in a cancellable state (not delivered or shipped)",
                "operationId": "cancelOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order cancelled successfully"
                                        },
                                        "order_id": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot cancel order in current status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cannot cancel order in shipped status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{limit?}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products with optional limit",
                "description": "Returns a list of all active products (public endpoint, default limit is 20)",
                "operationId": "545b9fef878b062079f4d52389aef2e2",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Maximum number of products to return (default: 20, max: 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Smartphone XYZ"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Latest smartphone with advanced features"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "category_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "category": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    },
                                                    "img": {
                                                        "type": "string",
                                                        "example": "categories/electronics.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 999.99
                                            },
                                            "discount_percentage": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 10.5
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "in_stock"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products (including deactivated ones)",
                "description": "Returns a list of all products (admin only)",
                "operationId": "dc6790eba53ce526cf579d7f18625cf4",
                "responses": {
                    "200": {
                        "description": "List of all products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Creates a new product with details and images",
                "operationId": "a19f84741edc4e6e9599d1d0ed8b3360",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "category_id",
                                    "price",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Smartphone XYZ"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Latest smartphone with advanced features"
                                    },
                                    "image1": {
                                        "description": "First product image",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "image2": {
                                        "description": "Second product image (optional)",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "image3": {
                                        "description": "Third product image (optional)",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 999.99
                                    },
                                    "discount_percentage": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "deactive",
                                            "in_stock",
                                            "out_of_stock"
                                        ],
                                        "example": "in_stock"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details",
                "description": "Returns the details of a specific product (public endpoint)",
                "operationId": "05f6ffcb49f47b4f4fc1a1c21ed60011",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/admin/products/{product}": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Update product",
                "description": "Updates an existing product",
                "operationId": "1bf1595be5b90669e9de5416e7cc4426",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Smartphone XYZ"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "image1": {
                                        "description": "First product image",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "image2": {
                                        "description": "Second product image",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "image3": {
                                        "description": "Third product image",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 899.99
                                    },
                                    "discount_percentage": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "deactive",
                                            "in_stock",
                                            "out_of_stock"
                                        ],
                                        "example": "in_stock"
                                    },
                                    "_method": {
                                        "type": "string",
                                        "default": "PUT",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product",
                "description": "Deletes a product",
                "operationId": "2ed7f4be9e6e2b3aba212b27b3aed2b9",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/search/{limit?}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Search products with optional limit",
                "description": "Search products by name, category, price range or status",
                "operationId": "4047ea21e6364b9d18344b855d27bb50",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "path",
                        "description": "Maximum number of products to return (default: 20, max: 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for product name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Product status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "in_stock",
                                "out_of_stock"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products matching search criteria",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Cart": {
                "title": "Cart",
                "description": "Shopping cart model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "firebase_uid": {
                        "type": "string",
                        "example": "user123",
                        "nullable": true
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 129.95
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItem"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "title": "Cart Item",
                "description": "Shopping cart item",
                "properties": {
                    "id": {
                        "description": "Class CartItem",
                        "type": "integer",
                        "example": 1
                    },
                    "cart_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 101
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 49.99
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CartItemWithProduct": {
                "title": "Cart Item With Product",
                "description": "Cart item with embedded product data",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CartItem"
                    },
                    {
                        "properties": {
                            "product": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Product": {
                "required": [
                    "name",
                    "description",
                    "category_id",
                    "price",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Smartphone XYZ"
                    },
                    "description": {
                        "type": "string",
                        "example": "Latest smartphone with advanced features"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 999.99
                    },
                    "discount_percentage": {
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "deactive",
                            "in_stock",
                            "out_of_stock"
                        ],
                        "example": "in_stock"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Cart",
            "description": "API endpoints for shopping cart management"
        },
        {
            "name": "Cart Items",
            "description": "API endpoints for managing items in the shopping cart"
        },
        {
            "name": "Categories",
            "description": "API endpoints for category management"
        },
        {
            "name": "Orders",
            "description": "API endpoints for order management including cash on delivery and online payments"
        },
        {
            "name": "Products",
            "description": "API endpoints for product management"
        }
    ]
}